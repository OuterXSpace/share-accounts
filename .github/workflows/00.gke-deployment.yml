name: Deploy to Azure

on:
  workflow_call:
    inputs:
      DEPLOYMENT_NAME:
        required: true
        type: string
      IMAGE:
        required: true
        type: string
      INGRESS_IP:
        required: true
        type: string
      PERSONAL_TOTO_CDN:
        required: true
        type: string
      COMMON_TOTO_CDN:
        required: true
        type: string
      PUBLIC_CDN:
        required: true
        type: string
      DOT_ENV_FILE_NAME:
        required: true
        type: string
env:
  DEPLOYMENT_NAME: ${{ inputs.DEPLOYMENT_NAME }}
  IMAGE: ${{ inputs.IMAGE }}
  PERSONAL_TOTO_CDN: ${{ inputs.PERSONAL_TOTO_CDN
  COMMON_TOTO_CDN: ${{ inputs.COMMON_TOTO_CDN
  PUBLIC_CDN: ${{ inputs.PUBLIC_CDN
  INGRESS_IP: ${{ inputs.INGRESS_IP }}
  DOT_ENV_FILE_NAME: ${{ inputs.DOT_ENV_FILE_NAME }}
  EMAIL_DOCKER_HUB: lgold141@gmail.com
  PASSWORD_DOCKER_HUB: BWKk9q9B@Cm7!$M
  USERNAME_DOCKER_HUB: warjamma

jobs:
  setup-build-publish-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Prepare dotenv
        run: rm -rf .env && mv $DOT_ENV_FILE_NAME .env

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the application
        run: yarn build

      - name: Create nginx folders
        run: mkdir -p ./nginx/conf.d

      - name: Generate nginx configuration files
        run: |
          ./deploy/nginx.default.conf.sh "$INGRESS_IP" "$PERSONAL_TOTO_CDN" "$COMMON_TOTO_CDN" "$PUBLIC_CDN" > ./nginx/conf.d/default.conf
          ./deploy/nginx.conf.sh > ./nginx/nginx.conf

      - name: Build Docker image
        run: docker build -t $IMAGE .

      - name: Log in to Docker Hub
        run: echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

      - name: Push Docker image
        run: |
          docker tag $IMAGE $DOCKER_HUB_USERNAME/$IMAGE:latest
          docker push $DOCKER_HUB_USERNAME/$IMAGE:latest

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy application
        run: |
          ssh $SERVER_USER@$SERVER_IP << 'EOF'
            sudo docker pull $DOCKER_HUB_USERNAME/$IMAGE:latest
            sudo docker stop $IMAGE || true
            sudo docker rm $IMAGE || true
            sudo docker run -d -p 5000:80 --name $IMAGE $DOCKER_HUB_USERNAME/$IMAGE:latest
          EOF
